/*! wb-lib | https://github.com/emilymcaldwell/wb-lib/blob/main/LICENSE */
const t=Object.assign,e=Object.freeze,s=Math.max,i=Math.min,n=clearTimeout,o=setTimeout,a=(e,s)=>t(e.style,s),r=t=>t+"px",h=t=>t?.classList??null,l=(t,e,s)=>h(t)?.toggle(e,s)??null,c=(t,e)=>l(t,e,!1)??null,d=(t,e)=>t?.getAttribute(e)??null,u=(t,e,s)=>e&&(s?t?.setAttribute(e,s):t?.removeAttribute(e)),p=(t,e,s,i)=>e.appendChild(t.createElement(s,i)),m=(t,e)=>t.querySelectorAll(e),f=(t,e)=>t.matches(e),b=(t,e)=>[...f(t,e)?[t]:[],...m(t,e)],E=t=>[t,...m(t,"*")],y=t=>t?.ownerDocument,v=(t,e)=>t?.includes(e)??!1,x=(t,e,s)=>t?.addEventListener(e,s),g=(t,e,s)=>t?.removeEventListener(e,s),L=(t,e,s)=>e.forEach((e=>x(t,e,s))),S=(t,e,s)=>e.forEach((e=>g(t,e,s))),D=t=>t instanceof HTMLElement,C=t=>t instanceof HTMLAudioElement,M=t=>t instanceof MouseEvent,w="target",H="indicator",O="source",T="margin",N="delay",I="loiter",Q="simultaneous-playback",k="click",R="mousedown",W="mousemove",V="mouseout",A="mouseover",P=e([A,V,R,k]);class z extends HTMLElement{static QN="tipps-visor";static QR=e([z]);#t;#e;#s=null;#i;#n;#o=()=>h(this.firstElementChild);constructor(){super();const t=this.attachShadow({mode:"closed"}),e=y(t),s=this.#t=p(e,t,"div");a(s,{position:"absolute",pointerEvents:"none"}),this.#a(0,0),this.#e=p(e,s,"slot")}get#r(){return d(this,H)??"active"}get#h(){return d(this,O)??"title"}get#l(){return+(d(this,T)??0)||4}get#c(){return+(d(this,N)??0)||700}get#d(){return+(d(this,I)??0)||300}static observedAttributes=e([w,H,O,T,N,I]);attributeChangedCallback(t,e,s){if(t===H){const t=this.#o();t?.contains(e)&&(t.remove(e),t.add(s))}}handleEvent(t){M(t)&&(t.type===W&&this.#u(t),t.type===A?this.#p(t):v([V,R,k],t.type)&&this.onTippsDown(t))}#m(t=null){(this.querySelector("slot[name=prompt]")??this.#e).innerText=t??""}#a(t,e){a(this.#t,{left:r(t),top:r(e)})}#u=t=>{const e=y(this.#s)?.defaultView;if(!e)return;const n=(o=this.#t,o?.getBoundingClientRect());var o;const a=new DOMRect(t.pageX,t.pageY,18,18),r=function(t,e){const s=2*e;return new DOMRect(t.scrollX+e,t.scrollY+e,t.innerWidth-s,t.innerHeight-s)}(e,this.#l),h=new DOMPoint(a.x,a.y-n.height),l=new DOMPoint(s(0,r.left-h.x)+i(0,r.right-(h.x+n.width)),s(0,r.top-h.y)+i(0,r.bottom-h.y));h.x+=l.x?l.x:a.width*(l.y/n.height),h.y+=l.y,h.x=i(h.x,r.right-n.width),h.y=i(h.y,r.bottom-n.height),this.#a(h.x,h.y)};#f(t,e){var s,i,n;this.#i=void 0,this.#o()?.add(this.#r),this.#t.style.zIndex=e.style.zIndex??0,this.#m((s=e,i=this.#h,d((n=`[${i}]`,s?.matches(n)?s:s?.closest(n)),i))),this.#u(t),x(y(e),W,this)}#p(t){const e=t.target;D(e)&&(this.#s=e,this.#n?(this.#n=n(this.#n),this.#f(t,e)):this.#i=o((()=>this.#f(t,e)),this.#c))}#b(){this.#n=void 0,this.#m(),this.#t.style.zIndex="-1",this.#o()?.remove(this.#r)}onTippsDown(t){this.#i=n(this.#i),this.#n=n(this.#n),g(y(this.#s),W,this),!t||v([k,R],t.type)?this.#b():this.#n=o((()=>this.#b()),this.#d),this.#s=null}}const j=z.observedAttributes;class q extends HTMLElement{static QN="tipps";static QR=e([...z.QR,q]);#E=new WeakSet;#y=new z;#v=new MutationObserver((t=>{for(const e of t){let t=e.attributeName,s=e.target;s===this&&t?t===w?this.connectedCallback():v(j,t)&&u(this.#y,t,d(this,t)):"childList"===e.type?(e.removedNodes.forEach((t=>this.#x(t))),e.addedNodes.forEach((t=>this.#g(t)))):"attributes"===e.type&&(this.#x(s),this.#g(s))}}));#x(t){if(D(t))for(const e of E(t))D(e)&&this.#E.delete(e)&&S(e,P,this.#y)}#g(t){const e=d(this,w);if(e&&D(t))for(const s of b(t,e))D(s)&&!this.#E.has(s)&&(this.#E.add(s),L(s,P,this.#y))}connectedCallback(){const t=this.parentNode;t&&(j.forEach((t=>u(this.#y,t,d(this,t)))),this.#y.onTippsDown(null),this.#x(t),this.#g(t),this.#v.disconnect(),this.#v.observe(t,{childList:!0,subtree:!0,attributeFilter:j}),y(this).body.appendChild(this.#y).append(...this.children))}}const F=e(["play","pause","ended"]),U=e([w,H,Q]);class X extends HTMLElement{static QN="tmblr-audio";static QR=e([X]);#E=new WeakSet;get#r(){return d(this,H)??"playing"}get#L(){return!!d(this,Q)}#v=new MutationObserver((t=>{for(const e of t){let t=e.attributeName,s=e.target;s===this&&t?v(U,t)&&this.connectedCallback():"childList"===e.type?(e.removedNodes.forEach((t=>this.#x(t))),e.addedNodes.forEach((t=>this.#g(t)))):"attributes"===e.type&&(this.#x(s),this.#g(s))}}));#x(t){if(D(t))for(const e of E(t))D(e)&&this.#E.delete(e)&&(g(e,R,this),S(e,F,this),c(e,this.#r))}#g(t){const e=d(this,w);if(e&&D(t))for(const s of b(t,e))if(D(s)&&!this.#E.has(s)){const t=s.nextElementSibling;C(t)&&l(s,this.#r,!t.paused),x(s,R,this),this.#E.add(s)}}handleEvent(t){const e=t.target;if(M(t)){if(D(e)){const t=e.nextElementSibling;if(C(t))if(this.#E.has(t)||(L(t,F,this),this.#E.add(t)),t.paused){if(!this.#L){const t=this.parentElement;t&&b(t,"audio").forEach((t=>t.pause()))}t.play()}else t.pause()}}else v(F,t.type)&&C(e)&&l(e.previousElementSibling,this.#r,!e.paused)}connectedCallback(){const t=this.parentNode;t&&(this.#x(t),this.#g(t),this.#v.disconnect(),this.#v.observe(t,{childList:!0,subtree:!0,attributeFilter:U}))}}[...q.QR,...X.QR].forEach((t=>customElements.define(`wb-${t.QN}`,t)));
